group 'com.fndsoft'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    mavenCentral()
}
configurations {
    mybatisGenerator
}
dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:1.4.6.RELEASE")
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.38'
    //mybatis
    compile "org.mybatis.spring.boot:mybatis-spring-boot-starter:1.2.0"
    compile group: 'tk.mybatis', name: 'mapper-spring-boot-starter', version: '1.1.1'
//    compile "tk.mybatis:mapper-spring-boot-starter:1.1.0"
    compile "javax.persistence:persistence-api:1.0.2"
    compile "com.github.pagehelper:pagehelper-spring-boot-starter:1.1.0"
    // https://mvnrepository.com/artifact/net.sf.json-lib/json-lib
    compile "net.sf.json-lib:json-lib:2.4:jdk15"
    compile("org.springframework.boot:spring-boot-starter-redis:1.4.6.RELEASE")
    //session
    // https://mvnrepository.com/artifact/org.springframework.session/spring-session
    compile group: 'org.springframework.session', name: 'spring-session', version: '1.3.1.RELEASE'



    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.5'
    mybatisGenerator 'tk.mybatis:mapper:3.3.9'
    mybatisGenerator group: 'mysql', name: 'mysql-connector-java', version: '5.1.38'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}
def getDbProperties = {
    def properties = new Properties()
    file("src/main/resources/mybatis/config.properties").withInputStream { inputStream ->
        properties.load(inputStream)
    }
    properties
}

task mybatisGenerate << {
    def properties = getDbProperties()
    ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = properties.getProperty("jdbc.driverClassName")
    ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
    ant.properties['userId'] = properties.getProperty("jdbc.username")
    ant.properties['password'] = properties.getProperty("jdbc.password")
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = properties.getProperty("package.model")
    ant.properties['mapperPackage'] = properties.getProperty("package.mapper")
    ant.properties['sqlMapperPackage'] = properties.getProperty("package.xml")
    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator(overwrite: true,
            configfile: 'src/main/resources/mybatis/generatorConfig.xml', verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')
        }
    }
}
